<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>framework</display-name>
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
   <!-- Spring  Start-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value> 
            classpath:spring/applicationContext-datasource.xml,
            classpath:spring/applicationContext.xml,
            classpath:spring/applicationContext-service.xml,
            classpath:spring/applicationContext-aop.xml,
            classpath:spring/applicationContext-tx.xml
            classpath:advertisingplatform/applicationContext-service-product.xml
		</param-value>
    </context-param>
   <listener>
        <listener-class> 
        	org.springframework.web.context.ContextLoaderListener 
        </listener-class>
    </listener>
   <!-- Spring  End-->
   
   <servlet>  
        <servlet-name>springMvcDispatcher</servlet-name>  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>  
            <param-name>contextConfigLocation</param-name>  
            <param-value>classpath:spring/rest-servlet.xml</param-value>  
        </init-param>  
        <load-on-startup>1</load-on-startup>
    </servlet>
	<servlet-mapping>
		<servlet-name>springMvcDispatcher</servlet-name>
		<url-pattern>*.json</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>springMvcDispatcher</servlet-name>
		<url-pattern>*.xml</url-pattern>
	</servlet-mapping>
  	
  	<servlet-mapping>  
    	<servlet-name>springMvcDispatcher</servlet-name>
    	<url-pattern>*.do</url-pattern>
  	</servlet-mapping>
	<!-- spring mvc dispatcher end -->
	
	   <!-- GZIPFilter Definition -->
	<!--   <filter>
	    <filter-name>GZIPFilter</filter-name>
	    <filter-class>com.tacitknowledge.filters.gzipfilter.GZIPFilter</filter-class>
	  </filter>
	    GZIPFilter Mappings  - Alter to fit your circumstances  
	  <filter-mapping>
	    <filter-name>GZIPFilter</filter-name>
	    <url-pattern>*.js</url-pattern>
	  </filter-mapping>
	  <filter-mapping>
	    <filter-name>GZIPFilter</filter-name>
	     <url-pattern>*.css</url-pattern>
	  </filter-mapping>
	  <filter-mapping>
	    <filter-name>GZIPFilter</filter-name>
	     <url-pattern>*.jpg</url-pattern>
	  </filter-mapping>
	   <filter-mapping>
	    <filter-name>GZIPFilter</filter-name>
	     <url-pattern>*.png</url-pattern>
	  </filter-mapping> -->
    <!-- 派综框架  Servlet Start -->
   
   
   <!-- servlet start -->
	   	<!-- servlet demo -->
			   <!-- <servlet>
				   	<servlet-name>userCreateServletTestTransaction</servlet-name>
				   	<servlet-class>servlet.UserCreateServletTestTransaction</servlet-class>
			   </servlet>
			   <servlet-mapping>
			   		<servlet-name>userCreateServletTestTransaction</servlet-name>
			   		<url-pattern>/userCreateServletTestTransaction</url-pattern>
			   </servlet-mapping>
			    <servlet>
				   	<servlet-name>userCreateServletTestWithOutTransaction</servlet-name>
				   	<servlet-class>servlet.UserCreateServletTestWithOutTransaction</servlet-class>
			   </servlet>
			   <servlet-mapping>
			   		<servlet-name>userCreateServletTestWithOutTransaction</servlet-name>
			   		<url-pattern>/userCreateServletTestWithOutTransaction</url-pattern>
			   </servlet-mapping> -->
		 <!-- servlet demo end -->
		 <!-- ums  start-->
			  <!-- <servlet>
			   	<servlet-name>useridisExistsServlet</servlet-name>
			   	<servlet-class>ums.servlet.UseridisExistsServlet</servlet-class>
			   </servlet>
			   <servlet-mapping>
			   		<servlet-name>useridisExistsServlet</servlet-name>
			   		<url-pattern>/useridisExistsServlet</url-pattern>
			   </servlet-mapping> -->
			   
			   <!-- menu manage -->
		  		<!-- <servlet>
				   	<servlet-name>menuCreateServlet</servlet-name>
				   	<servlet-class>ums.servlet.MenuCreateServlet</servlet-class>
			   </servlet>
			   <servlet-mapping>
			   		<servlet-name>menuCreateServlet</servlet-name>
			   		<url-pattern>/menuCreateServlet</url-pattern>
			   </servlet-mapping>
			    <servlet>
				   	<servlet-name>menuEditServlet</servlet-name>
				   	<servlet-class>ums.servlet.MenuEditServlet</servlet-class>
			   </servlet>
			   <servlet-mapping>
			   		<servlet-name>menuEditServlet</servlet-name>
			   		<url-pattern>/menuEditServlet</url-pattern>
			   </servlet-mapping>
			   <servlet>
				   	<servlet-name>menuDeleteServlet</servlet-name>
				   	<servlet-class>ums.servlet.MenuDeleteServlet</servlet-class>
			   </servlet>
			   <servlet-mapping>
			   		<servlet-name>menuDeleteServlet</servlet-name>
			   		<url-pattern>/menuDeleteServlet</url-pattern>
			   </servlet-mapping>
			    <servlet>
				   	<servlet-name>menuTreeServlet</servlet-name>
				   	<servlet-class>ums.servlet.MenuTreeServlet</servlet-class>
			   </servlet>
			   <servlet-mapping>
			   		<servlet-name>menuTreeServlet</servlet-name>
			   		<url-pattern>/menuTreeServlet</url-pattern>
			   </servlet-mapping>
			    <servlet>
				   	<servlet-name>menuGrantRoleServlet</servlet-name>
				   	<servlet-class>ums.servlet.MenuGrantRoleServlet</servlet-class>
			   </servlet>
			   <servlet-mapping>
			   		<servlet-name>menuGrantRoleServlet</servlet-name>
			   		<url-pattern>/menuGrantRoleServlet</url-pattern>
			   </servlet-mapping>
			    <servlet>
				   	<servlet-name>departmentCreateServlet</servlet-name>
				   	<servlet-class>ums.servlet.DepartmentCreateServlet</servlet-class>
			   </servlet>
			   <servlet-mapping>
			   		<servlet-name>departmentCreateServlet</servlet-name>
			   		<url-pattern>/departmentCreateServlet</url-pattern>
			   </servlet-mapping>
			   
			    <servlet>
				   	<servlet-name>departmentEditServlet</servlet-name>
				   	<servlet-class>ums.servlet.DepartmentEditServlet</servlet-class>
			   </servlet>
			   <servlet-mapping>
			   		<servlet-name>departmentEditServlet</servlet-name>
			   		<url-pattern>/departmentEditServlet</url-pattern>
			   </servlet-mapping>
			   
			    <servlet>
				   	<servlet-name>departmentDeleteServlet</servlet-name>
				   	<servlet-class>ums.servlet.DepartmentDeleteServlet</servlet-class>
			   </servlet>
			   <servlet-mapping>
			   		<servlet-name>departmentDeleteServlet</servlet-name>
			   		<url-pattern>/departmentDeleteServlet</url-pattern>
			   </servlet-mapping>
			   
			    <servlet>
				   	<servlet-name>departmentTreeServlet</servlet-name>
				   	<servlet-class>ums.servlet.DepartmentTreeServlet</servlet-class>
			   </servlet>
			   <servlet-mapping>
			   		<servlet-name>departmentTreeServlet</servlet-name>
			   		<url-pattern>/departmentTreeServlet</url-pattern>
			   </servlet-mapping>	 -->	
			     	
			     <!-- deparment manage end-->
			    <!-- <servlet>
				   	<servlet-name>roleCreateServlet</servlet-name>
				   	<servlet-class>ums.servlet.RoleCreateServlet</servlet-class>
			   </servlet>
			   <servlet-mapping>
			   		<servlet-name>roleCreateServlet</servlet-name>
			   		<url-pattern>/roleCreateServlet</url-pattern>
			   </servlet-mapping>
			   
			    <servlet>
				   	<servlet-name>roleDeleteServlet</servlet-name>
				   	<servlet-class>ums.servlet.RoleDeleteServlet</servlet-class>
			   </servlet>
			   <servlet-mapping>
			   		<servlet-name>roleDeleteServlet</servlet-name>
			   		<url-pattern>/roleDeleteServlet</url-pattern>
			   </servlet-mapping>
			   
			    <servlet>
				   	<servlet-name>roleGrantUserServlet</servlet-name>
				   	<servlet-class>ums.servlet.RoleGrantUserServlet</servlet-class>
			   </servlet>
			   <servlet-mapping>
			   		<servlet-name>roleGrantUserServlet</servlet-name>
			   		<url-pattern>/roleGrantUserServlet</url-pattern>
			   </servlet-mapping>
		  		<servlet>
				   	<servlet-name>systemMenuTreeServlet</servlet-name>
				   	<servlet-class>ums.servlet.SystemMenuTreeServlet</servlet-class>
			   </servlet>
			    <servlet-mapping>
			   		<servlet-name>systemMenuTreeServlet</servlet-name>
			   		<url-pattern>/systemMenuTreeServlet</url-pattern>
			   </servlet-mapping>
			   <servlet>
				   	<servlet-name>menuTreeForOneRoleServlet</servlet-name>
				   	<servlet-class>ums.servlet.MenuTreeForOneRoleServlet</servlet-class>
			   </servlet>
			    <servlet-mapping>
			   		<servlet-name>menuTreeForOneRoleServlet</servlet-name>
			   		<url-pattern>/menuTreeForOneRoleServlet</url-pattern>
			   </servlet-mapping>
			   
			   <servlet>
				   	<servlet-name>menuTreeForOneRoleEditServlet</servlet-name>
				   	<servlet-class>ums.servlet.MenuTreeForOneRoleEditServlet</servlet-class>
			   </servlet>
			    <servlet-mapping>
			   		<servlet-name>menuTreeForOneRoleEditServlet</servlet-name>
			   		<url-pattern>/menuTreeForOneRoleEditServlet</url-pattern>
			   </servlet-mapping> -->
			   
			    
			    
			    <!-- CXF -->
			    <!--配置CXFServlet begin-->
			  	<!-- <servlet>
			  		<servlet-name>CXFServlet</servlet-name>
			  		<servlet-class>
			  			org.apache.cxf.transport.servlet.CXFServlet
			  		</servlet-class>
			  		<load-on-startup>1</load-on-startup>
			  	</servlet>
			  	<servlet-mapping>
			  		<servlet-name>CXFServlet</servlet-name>
			  		url可自定义配置，用于CXFServlet请求地址拦截,访问会用到
			  		<url-pattern>/webservice/*</url-pattern>
			  	</servlet-mapping> -->
			  	<!--配置CXFServlet end -->
			    <!-- CXF -->
			   <!-- login end -->
		<!-- ums end -->
		<!-- servlet test init-parameter 
		
		 		<servlet>
				   	<servlet-name>servletInitParameter</servlet-name>
				   	<servlet-class>servlet.ServletInitParameter</servlet-class>
				   	<init-param>
				   		<param-name>emailAdress</param-name>
				   		<param-value>xxxxx@qq.com</param-value>
				   	</init-param>
			   </servlet>
			    <servlet-mapping>
			   		<servlet-name>servletInitParameter</servlet-name>
			   		<url-pattern>/servletInitParameter</url-pattern>
			   </servlet-mapping>
			  -->
		<!-- servlet test init-parameter end -->
   <!-- servlet End -->
   <!-- jsf start 测试jsf配置-->
   <!-- <servlet> 
		<servlet-name>Faces Servlet</servlet-name> 
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup> 
	</servlet> 
	<servlet-mapping> 
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.xhtml</url-pattern> 
	</servlet-mapping> 
	 <context-param>
   	 	<param-name>javax.faces.PROJECT_STAGE</param-name>
   	 	<param-value>Development</param-value>
  	</context-param> -->
	<!-- jsf end -->
   <!--encodingFilter-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
			filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <!--
                <param-value>UTF-8</param-value>
            -->
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
     <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- login status filter -->
    <filter>
    	<filter-name>loginFilter</filter-name>
    	<filter-class>filter.LoginFilter</filter-class>
    </filter>
    <filter-mapping>
    	<filter-name>loginFilter</filter-name>
    	<url-pattern>/framework/*</url-pattern>
    </filter-mapping>
     <filter-mapping>
    	<filter-name>loginFilter</filter-name>
    	<url-pattern>/index.jsp</url-pattern>
    </filter-mapping>
    <!--  <filter>
    	<filter-name>SessionFilter</filter-name>
    	<filter-class>filter.SessionFilter</filter-class>
    </filter>
    <filter-mapping>
    	<filter-name>SessionFilter</filter-name>
    	<url-pattern>/*</url-pattern>
    </filter-mapping> -->
    <!--  <filter-mapping>
    	<filter-name>loginFilter</filter-name>
    	<url-pattern>/buy/*</url-pattern>
    </filter-mapping> -->
   <!--  <context-param>
    	<param-name>breed</param-name>
    	<param-value>test</param-value>
    </context-param> -->
    <!-- 测试listener用法 -->
    <!-- <listener>
    	<listener-class>
    		servlet.ServletContextListenerTest
    	</listener-class>
    </listener>
     <listener>
    	<listener-class>
    		servletListener.OnlineCounter
    	</listener-class>
    </listener> -->
    <!-- 页面缓存 -->
    <!-- <filter>
		<filter-name>CachePage1CachingFilter</filter-name>
		<filter-class>net.sf.ehcache.constructs.web.filter.SimplePageCachingFilter
		</filter-class>
		<init-param>
		 <param-name>suppressStackTrace</param-name>
		 <param-value>false</param-value>
		</init-param>
		<init-param>
		 <param-name>cacheName</param-name>
		 <param-value>CachePage1CachingFilter</param-value>
		</init-param>
	 </filter>
	 <filter-mapping>
		<filter-name>CachePage1CachingFilter</filter-name>
		<url-pattern>/index.jsp</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
		<dispatcher>FORWARD</dispatcher>
 	</filter-mapping> -->
    <session-config>
    <session-timeout>60</session-timeout><!-- 默认时间为10分钟 -->
    </session-config> 
</web-app>